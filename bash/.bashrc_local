# Personal bashrc things

# 1) This file should exist as ~/.bashrc_local
# 2) Copy this to ~/.bashrc
#
# if [[ -r ~/.bashrc_local ]]; then
#	. ~/.bashrc_local
# fi

# -- Use mg as editor
export EDITOR=/usr/bin/mg

# -- Git bash completion
source /etc/bash_completion.d/git-prompt

# -- Fancy prompt
export PS1='[\[\033[0;37m\]$(hostname) \[\033[0;32m\]\W\[\033[0m\]$(__git_ps1 " (\[\033[0;33m\]%s\[\033[0m\])")] $ '

# -- Fancy term tabs
export PROMPT_COMMAND=' echo -ne "\033]0;$(basename $(pwd))\007" '

# -- Go stuff
export GOROOT=/opt/google/go
export PATH=${PATH}:${GOROOT}/bin
export GOPATH=${HOME}/go
export PATH=${PATH}:${GOPATH}/bin
export CDPATH=.\
:${GOPATH}/src/indeed/systools\
:${GOPATH}/src/indeed/gophers\
:${GOPATH}/src/github.com/modprox

# -- Aliases
alias mv='mv --interactive'
alias cp='cp --interactive'
alias rm='rm --interactive'
alias ls='ls --color'
alias sl='ls --color'
alias xclip='xclip -selection c'
alias gs='git status'
alias diff='colordiff'
alias tree='tree -a'
alias cover-html='go test -coverprofile=/tmp/cover.out && go tool cover -html=/tmp/cover.out'
alias authors='git log | grep "Author: " | cut -d" " -f2,3 | sort | uniq -c | sort -nr'
alias compose='/opt/docker/run.sh "${@}"'
alias lvtail='${GOPATH}/bin/logvis-tail --env prod --backend kafka ${@}'
alias tree='tree -I .git ${@}'
alias show-kube-all='kubectl api-resources --verbs=list -o name | xargs -n 1 kubectl get -o name --all-namespaces'

# -- Functions
function docker-cleanup {
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
    docker volume rm $(docker volume ls -q -f 'dangling=true') 2>/dev/null
}

function docker-ps {
    docker ps -a --format "{{.Names}}\t{{.Status}}\t{{.Image}}"
}

function iclone {
    group="${1}"
    project="${2}"
    if [ -z "${group}" ]; then echo "format: 'iclone group project'" && return; fi
    if [ -z "${project}" ]; then echo "format: 'iclone group project'" && return; fi
    pushd ${GOPATH}/src/indeed/${group}
    git clone "git@code.internal.com:${group}/${project}.git"
    popd
}

function power {
    pct=$(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | awk '{print $2}')
    echo ${pct}
}

function temp {
    python -c "import sys; t = sys.argv[1]; print int(t)/1000" $(cat /sys/class/thermal/thermal_zone*/temp)
}

function set-upstream {
    b=$(git rev-parse --abbrev-ref HEAD)
    git branch --set-upstream-to="origin/${b}" "${b}"
    echo "set upstream to origin/${b}"
}
